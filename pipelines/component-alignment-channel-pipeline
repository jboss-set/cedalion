/**
 * This is a version of component alignment pipeline that compares artifact versions in a wildfly channel
 * (rather than in the source code), against the contents of defined repositories.
 */
pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // download tools
                sh """
                    # Delete previously generated files if present
                    rm -fr *.html *.yaml *.jar

                    readonly SENDMAIL_URL='https://github.com/jboss-set/sendmail/releases/download/1.0.0/sendmail-1.0.0-jar-with-dependencies.jar'
                    curl -L "\${SENDMAIL_URL}" -o sendmail-jar-with-dependencies.jar
                    
                    readonly CLI_URL='https://repository.jboss.org/nexus/content/repositories/releases/org/jboss/set/channel/wildfly-channel-cli/1.0.13/wildfly-channel-cli-1.0.13-executable.jar'
                    curl -L "\${CLI_URL}" -o wildfly-channel-cli-executable.jar
                    
                    # Channel referencing the latest manifest published by the EAP 8 pipeline
                    curl -s "${env.CHANNEL_URL}" -o channel.yaml
                    """
            }
        }
        stage ('Run Report') {
            steps {
                script {
                    repositories = env.REPOSITORIES.trim().replaceAll("\\s*\n\\s*", ",")
                }

                sh """
                    # Generate the report and upgraded manifests
                    java -jar wildfly-channel-cli-*.jar \
                        find-upgrades file:channel.yaml \
                        --repositories="${repositories}"
                    
                    # If the report came out empty, the file would not be generated
                    if [ -f report.html ]; then
                        java -jar sendmail-*.jar \
                            --content report.html \
                            --content-type text/html \
                            --subject '${env.SUBJECT}' \
                            --from '${env.FROM_ADDR}' \
                            --to '${env.TO_ADDR}' \
                            --smtp-server smtp.corp.redhat.com \
                            --smtp-port 587
                    fi
                    """
            }
        }
    }
    post {
        always {
            archiveArtifacts('report.html, *.yaml')
        }
        failure {
            mail to: 'thofman@redhat.com', from: 'thofman@redhat.com',
                    subject: "Build: ${env.JOB_NAME} - Failed",
                    body: "Job Failed - \"${env.JOB_NAME}\" build: ${env.BUILD_NUMBER}\n\nView the log at:\n ${env.BUILD_URL}"
        }
    }
}
